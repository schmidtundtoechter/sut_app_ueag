[
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Save",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-05-23 16:50:22.529664",
  "module": "SUT App UEAG",
  "name": "Mitarbeiter - Summe Wochenarbeitszeit für Einzelner Datensatz",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Employee",
  "script": "def is_date_valid(date_field, today, is_end_date=False):\n    \"\"\"Check if a date field is valid for today's calculation\"\"\"\n    if not date_field:\n        return True  # No date restriction\n    \n    date_obj = frappe.utils.getdate(date_field)\n    \n    if is_end_date:\n        return today <= date_obj  # End date should be in future or today\n    else:\n        return today >= date_obj  # Start date should be in past or today\n\ndef calculate_current_working_hours(doc):\n    \"\"\"\n    Calculate current working hours for individual employee record\n    Executes on Employee Before Save event\n    \"\"\"\n    try:\n        # Initialize working hours components\n        base_hours = 0\n        project_hours = [0, 0, 0, 0]\n        allowance_hours = 0\n        \n        today = frappe.utils.getdate()\n        \n        # Calculate base working hours\n        if (doc.custom_wochenstunden_grundvertrag and\n            is_date_valid(doc.custom_start_des_grundvertrags, today) and\n            is_date_valid(doc.custom_ende_des_arbeitsverhältnis, today, is_end_date=True)):\n            base_hours = doc.custom_wochenstunden_grundvertrag\n        \n        # Calculate project working hours\n        project_configs = [\n            {\n                'hours': doc.custom_wochenstunden_projekt_1,\n                'start': doc.custom_start_der_1_arbeit,\n                'end': doc.custom_befristung_des_1_vertrags\n            },\n            {\n                'hours': doc.custom_wochenstunden_projekt_2,\n                'start': doc.custom_start_der_2_arbeit,\n                'end': doc.custom_befristung_des_2_vertrags\n            },\n            {\n                'hours': doc.custom_wochenstunden_projekt_3,\n                'start': doc.custom_start_der_3_arbeit,\n                'end': doc.custom_befristung_des_3_vertrags\n            },\n            {\n                'hours': doc.custom_wochenstunden_projekt_4,\n                'start': doc.custom_start_der_4_arbeit,\n                'end': doc.custom_befristung_des_4_vertrags\n            }\n        ]\n        \n        for i, project in enumerate(project_configs):\n            if (project['hours'] and\n                is_date_valid(project['start'], today) and\n                is_date_valid(project['end'], today, is_end_date=True)):\n                project_hours[i] = project['hours']\n        \n        # Calculate allowance working hours\n        allowance_configs = [\n            {\n                'project': doc.custom_projekt_zulage_1,\n                'hours': doc.custom_wochenstunden_zulage_1,\n                'start': doc.custom_anfangsdatum_zulage_1,\n                'end': doc.custom_enddatum_zulage_1\n            },\n            {\n                'project': doc.custom_projekt_zulage_2,\n                'hours': doc.custom_wochenstunden_zulage_2,\n                'start': doc.custom_anfangsdatum_zulage_2,\n                'end': doc.custom_enddatum_zulage_2\n            }\n        ]\n        \n        for allowance in allowance_configs:\n            if (allowance['project'] and allowance['hours'] and\n                is_date_valid(allowance['start'], today) and\n                is_date_valid(allowance['end'], today, is_end_date=True)):\n                allowance_hours = allowance_hours + allowance['hours']\n        \n        # Calculate total working hours\n        project_sum = sum(project_hours)\n        \n        # Check additional hours flags\n        additional_flags = [\n            doc.custom_wochenstunden_zum_grundvertrag_hinzurechnen,\n            doc.custom_wochenstunden_zum_grundvertrag_hinzurechnen_1,\n            doc.custom_wochenstunden_zum_grundvertrag_hinzurechnen_2,\n            doc.custom_wochenstunden_zum_grundvertrag_hinzurechnen_4\n        ]\n        \n        if project_sum > 0 and not any(additional_flags):\n            total_hours = project_sum + allowance_hours\n        else:\n            total_hours = base_hours + project_sum + allowance_hours\n        \n        # Update fields\n        doc.custom_summe_wochenarbeitszeit = total_hours\n        doc.custom_summe_wochenarbeitszeit_2 = total_hours\n        \n    except Exception as e:\n        # Simple error handling without logging\n        doc.custom_summe_wochenarbeitszeit = 0\n        doc.custom_summe_wochenarbeitszeit_2 = 0\n\n# Execute the calculation\ncalculate_current_working_hours(doc)",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Save",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-05-23 12:34:31.647768",
  "module": "SUT App UEAG",
  "name": "Mitarbeiter - Gesamtlohn des gerade bearbeiteten MA incl. Vertragsverhandlung berechnen",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Employee",
  "script": "# large m : the script has been reviewed and corrected (if necessary).\r\n\r\n# Dieses Script wird beim Speichern eines Employee-Dokuments ausgeführt.\r\n# Dieses Script wurde modifiziert, um Daten aus dem GEHALTSVERHANDLUNG DocType zu verwenden.\r\n\r\ndef calculate_salary(doc):\r\n    # Prüfen, ob eine Gehaltsverhandlung verknüpft ist\r\n    if not doc.custom_gehaltsverhandlung:\r\n        return\r\n    \r\n    # Gehaltsverhandlungsdokument abrufen\r\n    gehaltsverhandlung = frappe.get_doc(\"GEHALTSVERHANDLUNG\", doc.custom_gehaltsverhandlung)\r\n    \r\n    # Variableninitialisierung\r\n    SUMMEGRUNDVERTRAG = 0\r\n    SUMMEPROJEKT1 = 0\r\n    SUMMEPROJEKT2 = 0\r\n    SUMMEPROJEKT3 = 0\r\n    SUMMEPROJEKT4 = 0\r\n    SUMMEZULAGE = 0\r\n    custom_summe_gehalt = 0\r\n\r\n    today_date = frappe.utils.getdate()  # Wandelt das heutige Datum in ein Date-Objekt um\r\n\r\n    # Erster Teil: Grundvertrag prüfen\r\n    if gehaltsverhandlung.custom_grundvertrag_in_verhandlung:\r\n        if (gehaltsverhandlung.custom_gehalt_des_grundvertrags_in_verhandlung\r\n            and (not gehaltsverhandlung.custom_start_des_grundvertrags_in_verhandlung or today_date >= frappe.utils.getdate(gehaltsverhandlung.custom_start_des_grundvertrags_in_verhandlung))\r\n            and (not gehaltsverhandlung.custom_ende_des_arbeitsverhältnis_in_verhandlung or today_date <= frappe.utils.getdate(gehaltsverhandlung.custom_ende_des_arbeitsverhältnis_in_verhandlung))):\r\n            SUMMEGRUNDVERTRAG = gehaltsverhandlung.custom_gehalt_des_grundvertrags_in_verhandlung\r\n    else:\r\n        if (doc.custom_gehalt_des_grundvertrags\r\n            and (not doc.custom_start_des_grundvertrags or today_date >= frappe.utils.getdate(doc.custom_start_des_grundvertrags))\r\n            and (not doc.custom_ende_des_arbeitsverhältnis or today_date <= frappe.utils.getdate(doc.custom_ende_des_arbeitsverhältnis))):\r\n            SUMMEGRUNDVERTRAG = doc.custom_gehalt_des_grundvertrags\r\n\r\n    # Zweiter Teil: Projektverträge prüfen\r\n    if gehaltsverhandlung.custom_projekt_1_in_verhandlung:\r\n        if gehaltsverhandlung.custom_gehalt_projekt_1_iv and gehaltsverhandlung.custom_gehalt_projekt_1_iv > 0:\r\n            SUMMEPROJEKT1 = gehaltsverhandlung.custom_gehalt_projekt_1_iv     \r\n    else:\r\n        if doc.custom_gehalt_projekt_1 and doc.custom_gehalt_projekt_1 > 0 and (not doc.custom_start_der_1_arbeit or today_date >= frappe.utils.getdate(doc.custom_start_der_1_arbeit)) \\\r\n            and (not doc.custom_befristung_des_1_vertrags or today_date <= frappe.utils.getdate(doc.custom_befristung_des_1_vertrags)):\r\n            SUMMEPROJEKT1 = doc.custom_gehalt_projekt_1\r\n\r\n    if gehaltsverhandlung.custom_projekt_2_in_verhandlung:\r\n        if gehaltsverhandlung.custom_gehalt_projekt_2_iv and gehaltsverhandlung.custom_gehalt_projekt_2_iv > 0:\r\n            SUMMEPROJEKT2 = gehaltsverhandlung.custom_gehalt_projekt_2_iv\r\n    else:\r\n        if doc.custom_gehalt_projekt_2 and doc.custom_gehalt_projekt_2 > 0 and (not doc.custom_start_der_2_arbeit or today_date >= frappe.utils.getdate(doc.custom_start_der_2_arbeit)) \\\r\n            and (not doc.custom_befristung_des_2_vertrags or today_date <= frappe.utils.getdate(doc.custom_befristung_des_2_vertrags)):\r\n            SUMMEPROJEKT2 = doc.custom_gehalt_projekt_2\r\n\r\n    if gehaltsverhandlung.custom_projekt_3_in_verhandlung:\r\n        # Fix für den Tippfehler: custom_gehalt_projekt_3_i -> custom_gehalt_projekt_3_iv\r\n        if gehaltsverhandlung.custom_gehalt_projekt_3_iv and gehaltsverhandlung.custom_gehalt_projekt_3_iv > 0:\r\n            SUMMEPROJEKT3 = gehaltsverhandlung.custom_gehalt_projekt_3_iv\r\n    else:\r\n        if doc.custom_gehalt_projekt_3 and doc.custom_gehalt_projekt_3 > 0 and (not doc.custom_start_der_3_arbeit or today_date >= frappe.utils.getdate(doc.custom_start_der_3_arbeit)) \\\r\n            and (not doc.custom_befristung_des_3_vertrags or today_date <= frappe.utils.getdate(doc.custom_befristung_des_3_vertrags)):\r\n            SUMMEPROJEKT3 = doc.custom_gehalt_projekt_3\r\n\r\n    # Projekt 4 (keine Verhandlungsoption, bleibt beim Employee)\r\n    if doc.custom_gehalt_projekt_4 > 0 and (not doc.custom_start_der_4_arbeit or today_date >= frappe.utils.getdate(doc.custom_start_der_4_arbeit)) \\\r\n        and (not doc.custom_befristung_des_4_vertrags or today_date <= frappe.utils.getdate(doc.custom_befristung_des_4_vertrags)):\r\n        SUMMEPROJEKT4 = doc.custom_gehalt_projekt_4\r\n\r\n    # Dritter Teil: Lohnteile zusammenrechnen\r\n    projekt_sum = SUMMEPROJEKT1 + SUMMEPROJEKT2 + SUMMEPROJEKT3 + SUMMEPROJEKT4\r\n    if projekt_sum == 0: custom_summe_gehalt = SUMMEGRUNDVERTRAG\r\n\r\n    # Welche Kreuze spielen eine Rolle?\r\n    if gehaltsverhandlung.custom_projekt_1_in_verhandlung: \r\n        kreuz1 = gehaltsverhandlung.custom_ist_zusätzliche_vergütung_zum_grundgehalt_iv\r\n    else: \r\n        kreuz1 = doc.custom_ist_zusätzliche_vergütung_zum_grundgehalt    \r\n    \r\n    if gehaltsverhandlung.custom_projekt_2_in_verhandlung: \r\n        kreuz2 = gehaltsverhandlung.custom_ist_zusätzliche_vergütung_zum_grundgehalt_1_iv\r\n    else: \r\n        kreuz2 = doc.custom_ist_zusätzliche_vergütung_zum_grundgehalt_2    \r\n    \r\n    if gehaltsverhandlung.custom_projekt_3_in_verhandlung: \r\n        kreuz3 = gehaltsverhandlung.custom_ist_zusätzliche_vergütung_zum_grundgehalt_2_iv\r\n    else: \r\n        kreuz3 = doc.custom_ist_zusätzliche_vergütung_zum_grundgehalt_3   \r\n    \r\n    # Das 4. Projekt hat keine Verhandlungsoption \r\n    kreuz4 = doc.custom_ist_zusätzliche_vergütung_zum_grundgehalt_4\r\n\r\n    if projekt_sum > 0 and (not any([kreuz1,kreuz2,kreuz3,kreuz4])): \r\n        custom_summe_gehalt = projekt_sum\r\n    else:\r\n        custom_summe_gehalt = projekt_sum + SUMMEGRUNDVERTRAG\r\n\r\n    # Vierter Teil: Zulagen summieren und hinzufügen\r\n    if gehaltsverhandlung.custom_zulage_1_in_verhandlung:\r\n        if ((gehaltsverhandlung.custom_projekt_zulage_1_iv and gehaltsverhandlung.custom_zulage_zulage_1_iv)\r\n            and (not gehaltsverhandlung.custom_anfangsdatum_zulage_1_iv or today_date >= frappe.utils.getdate(gehaltsverhandlung.custom_anfangsdatum_zulage_1_iv))\r\n            and (not gehaltsverhandlung.custom_enddatum_zulage_1_iv or today_date <= frappe.utils.getdate(gehaltsverhandlung.custom_enddatum_zulage_1_iv))):\r\n            SUMMEZULAGE = SUMMEZULAGE + gehaltsverhandlung.custom_zulage_zulage_1_iv\r\n    else:\r\n        if ((doc.custom_projekt_zulage_1 and doc.custom_zulage_zulage_1)\r\n            and (not doc.custom_anfangsdatum_zulage_1 or today_date >= frappe.utils.getdate(doc.custom_anfangsdatum_zulage_1))\r\n            and (not doc.custom_enddatum_zulage_1 or today_date <= frappe.utils.getdate(doc.custom_enddatum_zulage_1))):\r\n            SUMMEZULAGE = SUMMEZULAGE + doc.custom_zulage_zulage_1\r\n\r\n    if gehaltsverhandlung.custom_zulage_2_in_verhandlung:\r\n        if ((gehaltsverhandlung.custom_projekt_zulage_2_iv and gehaltsverhandlung.custom_zulage_zulage_2_iv)\r\n            and (not gehaltsverhandlung.custom_anfangsdatum_zulage_2_iv or today_date >= frappe.utils.getdate(gehaltsverhandlung.custom_anfangsdatum_zulage_2_iv))\r\n            and (not gehaltsverhandlung.custom_enddatum_zulage_2_iv or today_date <= frappe.utils.getdate(gehaltsverhandlung.custom_enddatum_zulage_2_iv))):\r\n            SUMMEZULAGE = SUMMEZULAGE + gehaltsverhandlung.custom_zulage_zulage_2_iv\r\n    else:\r\n        if ((doc.custom_projekt_zulage_2 and doc.custom_zulage_zulage_2)\r\n            and (not doc.custom_anfangsdatum_zulage_2 or today_date >= frappe.utils.getdate(doc.custom_anfangsdatum_zulage_2))\r\n            and (not doc.custom_enddatum_zulage_2 or today_date <= frappe.utils.getdate(doc.custom_enddatum_zulage_2))):\r\n            SUMMEZULAGE = SUMMEZULAGE + doc.custom_zulage_zulage_2\r\n\r\n    if custom_summe_gehalt > 0:\r\n        custom_summe_gehalt = custom_summe_gehalt + SUMMEZULAGE\r\n\r\n    # Ergebnis speichern\r\n    doc.custom_summe_gehalt_bei_offener_vertragsverhandlung = custom_summe_gehalt    \r\n    # Aktualisiert auch im Gehaltsverhandlungsdokument\r\n    gehaltsverhandlung.custom_summe_gehalt_bei_offener_vertragsverhandlung = custom_summe_gehalt\r\n    gehaltsverhandlung.save(ignore_permissions=True)\r\n\r\n# Funktion aufrufen\r\ncalculate_salary(doc)",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 1,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "Daily",
  "modified": "2025-05-22 13:39:00.223913",
  "module": "SUT App UEAG",
  "name": "Mitarbeiter - Tägliche Aktualisierung Summe Gehalt",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Employee",
  "script": "def calculate_custom_summe_gehalt(employee):\r\n    summe_gehalt = 0\r\n    today = frappe.utils.getdate(frappe.utils.nowdate())  # Heutiges Datum im Date-Format\r\n\r\n    # Überprüfen, ob das Grundgehalt gültig ist\r\n    has_valid_base_salary = False\r\n    if employee.custom_gehalt_des_grundvertrags and employee.custom_gehalt_des_grundvertrags > 0:\r\n        start_date = frappe.utils.getdate(employee.custom_start_des_grundvertrags)\r\n        end_date = frappe.utils.getdate(employee.custom_ende_des_arbeitsverhältnis) if employee.custom_ende_des_arbeitsverhältnis else None\r\n\r\n        if start_date <= today and (not end_date or end_date >= today):\r\n            additional_salary = employee.custom_gehalt_des_grundvertrags\r\n            summe_gehalt = summe_gehalt + additional_salary  # Keine Kurzoperation\r\n            has_valid_base_salary = True\r\n\r\n    # Überprüfen der Projektgehälter\r\n    project_salaries = [\r\n        {\"salary\": employee.custom_gehalt_projekt_1, \"start\": employee.custom_start_der_1_arbeit, \"end\": employee.custom_befristung_des_1_vertrags, \"go\": employee.custom_ist_zusätzliche_vergütung_zum_grundgehalt},\r\n        {\"salary\": employee.custom_gehalt_projekt_2, \"start\": employee.custom_start_der_2_arbeit, \"end\": employee.custom_befristung_des_2_vertrags, \"go\": employee.custom_ist_zusätzliche_vergütung_zum_grundgehalt_1},\r\n        {\"salary\": employee.custom_gehalt_projekt_3, \"start\": employee.custom_start_der_3_arbeit, \"end\": employee.custom_befristung_des_3_vertrags, \"go\": employee.custom_ist_zusätzliche_vergütung_zum_grundgehalt_2},\r\n        {\"salary\": employee.custom_gehalt_projekt_4, \"start\": employee.custom_start_der_4_arbeit, \"end\": employee.custom_befristung_des_4_vertrags, \"go\": employee.custom_ist_zusätzliche_vergütung_zum_grundgehalt_3}\r\n    ]\r\n\r\n    for project in project_salaries:\r\n        if (project[\"go\"] or not has_valid_base_salary) and project[\"start\"] and project[\"salary\"] and project[\"salary\"] > 0:\r\n            start_date = frappe.utils.getdate(project[\"start\"])\r\n            end_date = frappe.utils.getdate(project[\"end\"]) if project[\"end\"] else None\r\n\r\n            if start_date <= today and (not end_date or end_date >= today):\r\n                additional_salary = project[\"salary\"]\r\n                summe_gehalt = summe_gehalt + additional_salary  # Keine Kurzoperation\r\n\r\n    return summe_gehalt\r\n\r\n# Anwendungslogik, um das berechnete Gehalt zu speichern\r\nemployees = frappe.get_all(\"Employee\", filters={}, fields=[\"name\"])\r\nfor emp in employees:\r\n    employee = frappe.get_doc(\"Employee\", emp[\"name\"])\r\n    summe_gehalt = calculate_custom_summe_gehalt(employee)\r\n    employee.custom_summe_gehalt = summe_gehalt\r\n    employee.save(ignore_permissions=True)",
  "script_type": "Scheduler Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Save",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-05-23 12:34:41.960779",
  "module": "SUT App UEAG",
  "name": "Mitarbeiter - Berechne Wochenarbeitszeit bei In Verhandlung plus alte Werte",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Employee",
  "script": "# large m : the script has been reviewed and corrected (if necessary).\r\n\r\n# Dieses Script wird beim Speichern eines Employee-Dokuments ausgeführt.\r\n# Dieses Script wurde modifiziert, um Daten aus dem GEHALTSVERHANDLUNG DocType zu verwenden.\r\n\r\ndef calculate_working_hours(doc):\r\n    # Prüfen, ob eine Gehaltsverhandlung verknüpft ist\r\n    if not doc.custom_gehaltsverhandlung:\r\n        return\r\n    \r\n    # Gehaltsverhandlungsdokument abrufen\r\n    gehaltsverhandlung = frappe.get_doc(\"GEHALTSVERHANDLUNG\", doc.custom_gehaltsverhandlung)\r\n    \r\n    # Variableninitialisierung\r\n    SUMMEGRUNDVERTRAGWAZ = 0\r\n    SUMMEPROJEKT1WAZ = 0\r\n    SUMMEPROJEKT2WAZ = 0\r\n    SUMMEPROJEKT3WAZ = 0\r\n    SUMMEPROJEKT4WAZ = 0\r\n    SUMMEZULAGEWAZ = 0\r\n    custom_summe_wochenarbeitszeit = 0\r\n\r\n    today_date = frappe.utils.getdate()  # Wandelt das heutige Datum in ein Date-Objekt um\r\n    \r\n    # Erster Teil: Grundvertrag prüfen\r\n    if gehaltsverhandlung.custom_grundvertrag_in_verhandlung:\r\n        if (gehaltsverhandlung.custom_wochenstunden_grundvertrag_in_verhandlung\r\n            and (not gehaltsverhandlung.custom_start_des_grundvertrags_in_verhandlung or today_date >= frappe.utils.getdate(gehaltsverhandlung.custom_start_des_grundvertrags_in_verhandlung))\r\n            and (not gehaltsverhandlung.custom_ende_des_arbeitsverhältnis_in_verhandlung or today_date <= frappe.utils.getdate(gehaltsverhandlung.custom_ende_des_arbeitsverhältnis_in_verhandlung))):\r\n            SUMMEGRUNDVERTRAGWAZ = gehaltsverhandlung.custom_wochenstunden_grundvertrag_in_verhandlung\r\n    else:\r\n        if (doc.custom_wochenstunden_grundvertrag \r\n            and (not doc.custom_start_des_grundvertrags or today_date >= frappe.utils.getdate(doc.custom_start_des_grundvertrags))\r\n            and (not doc.custom_ende_des_arbeitsverhältnis or today_date <= frappe.utils.getdate(doc.custom_ende_des_arbeitsverhältnis))):\r\n            SUMMEGRUNDVERTRAGWAZ = doc.custom_wochenstunden_grundvertrag\r\n\r\n    # Zweiter Teil: Projektverträge prüfen\r\n    if gehaltsverhandlung.custom_projekt_1_in_verhandlung:\r\n        if gehaltsverhandlung.custom_wochenstunden_projekt_1_iv and gehaltsverhandlung.custom_wochenstunden_projekt_1_iv > 0:\r\n            SUMMEPROJEKT1WAZ = gehaltsverhandlung.custom_wochenstunden_projekt_1_iv\r\n    else:\r\n        if doc.custom_wochenstunden_projekt_1 and (not doc.custom_start_der_1_arbeit or today_date >= frappe.utils.getdate(doc.custom_start_der_1_arbeit)) \\\r\n            and (not doc.custom_befristung_des_1_vertrags or today_date <= frappe.utils.getdate(doc.custom_befristung_des_1_vertrags)):\r\n            SUMMEPROJEKT1WAZ = doc.custom_wochenstunden_projekt_1\r\n\r\n    if gehaltsverhandlung.custom_projekt_2_in_verhandlung:\r\n        if gehaltsverhandlung.custom_wochenstunden_projekt_2_iv and gehaltsverhandlung.custom_wochenstunden_projekt_2_iv > 0:\r\n            SUMMEPROJEKT2WAZ = gehaltsverhandlung.custom_wochenstunden_projekt_2_iv\r\n    else:\r\n        if doc.custom_wochenstunden_projekt_2 and (not doc.custom_start_der_2_arbeit or today_date >= frappe.utils.getdate(doc.custom_start_der_2_arbeit)) \\\r\n            and (not doc.custom_befristung_des_2_vertrags or today_date <= frappe.utils.getdate(doc.custom_befristung_des_2_vertrags)):\r\n            SUMMEPROJEKT2WAZ = doc.custom_wochenstunden_projekt_2\r\n\r\n    if gehaltsverhandlung.custom_projekt_3_in_verhandlung:\r\n        if gehaltsverhandlung.custom_wochenstunden_projekt_3_iv and gehaltsverhandlung.custom_wochenstunden_projekt_3_iv > 0:\r\n            SUMMEPROJEKT3WAZ = gehaltsverhandlung.custom_wochenstunden_projekt_3_iv\r\n    else:\r\n        if doc.custom_wochenstunden_projekt_3 and (not doc.custom_start_der_3_arbeit or today_date >= frappe.utils.getdate(doc.custom_start_der_3_arbeit)) \\\r\n            and (not doc.custom_befristung_des_3_vertrags or today_date <= frappe.utils.getdate(doc.custom_befristung_des_3_vertrags)):\r\n            SUMMEPROJEKT3WAZ = doc.custom_wochenstunden_projekt_3\r\n\r\n    # Projekt 4 (keine Verhandlungsoption, bleibt beim Employee)\r\n    if doc.custom_wochenstunden_projekt_4 and (not doc.custom_start_der_4_arbeit or today_date >= frappe.utils.getdate(doc.custom_start_der_4_arbeit)) \\\r\n        and (not doc.custom_befristung_des_4_vertrags or today_date <= frappe.utils.getdate(doc.custom_befristung_des_4_vertrags)):\r\n        SUMMEPROJEKT4WAZ = doc.custom_wochenstunden_projekt_4\r\n\r\n    # Dritter Teil: Arbeitszeiten zusammenrechnen\r\n    projekt_sum = SUMMEPROJEKT1WAZ + SUMMEPROJEKT2WAZ + SUMMEPROJEKT3WAZ + SUMMEPROJEKT4WAZ\r\n    if projekt_sum == 0: custom_summe_wochenarbeitszeit = SUMMEGRUNDVERTRAGWAZ\r\n\r\n    # Welche Kreuze spielen eine Rolle?\r\n    if gehaltsverhandlung.custom_projekt_1_in_verhandlung: \r\n        kreuz1 = gehaltsverhandlung.custom_ist_zusätzliche_vergütung_zum_grundgehalt_iv\r\n    else: \r\n        kreuz1 = doc.custom_ist_zusätzliche_vergütung_zum_grundgehalt    \r\n    \r\n    if gehaltsverhandlung.custom_projekt_2_in_verhandlung: \r\n        kreuz2 = gehaltsverhandlung.custom_ist_zusätzliche_vergütung_zum_grundgehalt_1_iv\r\n    else: \r\n        kreuz2 = doc.custom_ist_zusätzliche_vergütung_zum_grundgehalt_2    \r\n    \r\n    if gehaltsverhandlung.custom_projekt_3_in_verhandlung: \r\n        kreuz3 = gehaltsverhandlung.custom_ist_zusätzliche_vergütung_zum_grundgehalt_2_iv\r\n    else: \r\n        kreuz3 = doc.custom_ist_zusätzliche_vergütung_zum_grundgehalt_3   \r\n    \r\n    # Das 4. Projekt hat keine Verhandlungsoption \r\n    kreuz4 = doc.custom_ist_zusätzliche_vergütung_zum_grundgehalt_4\r\n\r\n    if projekt_sum > 0 and (not any([kreuz1,kreuz2,kreuz3,kreuz4])): \r\n        custom_summe_wochenarbeitszeit = projekt_sum\r\n    else:\r\n        custom_summe_wochenarbeitszeit = projekt_sum + SUMMEGRUNDVERTRAGWAZ\r\n\r\n    # Vierter Teil: Zulagen summieren und hinzufügen\r\n    if gehaltsverhandlung.custom_zulage_1_in_verhandlung:\r\n        if ((gehaltsverhandlung.custom_projekt_zulage_1_iv and gehaltsverhandlung.custom_wochenstunden_zulage_1_iv)\r\n            and (not gehaltsverhandlung.custom_anfangsdatum_zulage_1_iv or today_date >= frappe.utils.getdate(gehaltsverhandlung.custom_anfangsdatum_zulage_1_iv))\r\n            and (not gehaltsverhandlung.custom_enddatum_zulage_1_iv or today_date <= frappe.utils.getdate(gehaltsverhandlung.custom_enddatum_zulage_1_iv))):\r\n            SUMMEZULAGEWAZ = SUMMEZULAGEWAZ + gehaltsverhandlung.custom_wochenstunden_zulage_1_iv\r\n    else:\r\n        if ((doc.custom_projekt_zulage_1 and doc.custom_wochenstunden_zulage_1)\r\n            and (not doc.custom_anfangsdatum_zulage_1 or today_date >= frappe.utils.getdate(doc.custom_anfangsdatum_zulage_1))\r\n            and (not doc.custom_enddatum_zulage_1 or today_date <= frappe.utils.getdate(doc.custom_enddatum_zulage_1))):\r\n            SUMMEZULAGEWAZ = SUMMEZULAGEWAZ + doc.custom_wochenstunden_zulage_1\r\n\r\n    if gehaltsverhandlung.custom_zulage_2_in_verhandlung:\r\n        if ((gehaltsverhandlung.custom_projekt_zulage_2_iv and gehaltsverhandlung.custom_wochenstunden_zulage_2_iv)\r\n            and (not gehaltsverhandlung.custom_anfangsdatum_zulage_2_iv or today_date >= frappe.utils.getdate(gehaltsverhandlung.custom_anfangsdatum_zulage_2_iv))\r\n            and (not gehaltsverhandlung.custom_enddatum_zulage_2_iv or today_date <= frappe.utils.getdate(gehaltsverhandlung.custom_enddatum_zulage_2_iv))):\r\n            SUMMEZULAGEWAZ = SUMMEZULAGEWAZ + gehaltsverhandlung.custom_wochenstunden_zulage_2_iv\r\n    else:\r\n        if ((doc.custom_projekt_zulage_2 and doc.custom_wochenstunden_zulage_2)\r\n            and (not doc.custom_anfangsdatum_zulage_2 or today_date >= frappe.utils.getdate(doc.custom_anfangsdatum_zulage_2))\r\n            and (not doc.custom_enddatum_zulage_2 or today_date <= frappe.utils.getdate(doc.custom_enddatum_zulage_2))):\r\n            SUMMEZULAGEWAZ = SUMMEZULAGEWAZ + doc.custom_wochenstunden_zulage_2\r\n\r\n    if custom_summe_wochenarbeitszeit > 0:\r\n        custom_summe_wochenarbeitszeit = custom_summe_wochenarbeitszeit + SUMMEZULAGEWAZ\r\n\r\n    # Ergebnis speichern\r\n    doc.custom_summe_wochenarbeitszeit__bei_offener_vertragsverhandlung = custom_summe_wochenarbeitszeit\r\n    # Aktualisiert auch im Gehaltsverhandlungsdokument\r\n    gehaltsverhandlung.custom_summe_wochenarbeitszeit__bei_offener_vertragsverhandlung = custom_summe_wochenarbeitszeit\r\n    gehaltsverhandlung.save(ignore_permissions=True)\r\n\r\n# Funktion wird bei Speichern aufgerufen\r\ncalculate_working_hours(doc)",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Save",
  "enable_rate_limit": 0,
  "event_frequency": "Daily",
  "modified": "2025-05-22 13:38:58.367687",
  "module": "SUT App UEAG",
  "name": "Mitarbeiter - Summe Wochenarbeitszeit für  Einzelner Datenatz",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Employee",
  "script": "# Dieses Script wird beim Speichern eines Employee-Dokuments ausgeführt.\r\n# Dieses Script wurde von Lars Maeurer bearbeitet und sollte funktionieren. Tests stehen teilweise noch aus.\r\n\r\ndef calculate_working_hours(doc):\r\n    # Variableninitialisierung\r\n    SUMMEGRUNDVERTRAGWAZ = 0\r\n    SUMMEPROJEKT1WAZ = 0\r\n    SUMMEPROJEKT2WAZ = 0\r\n    SUMMEPROJEKT3WAZ = 0\r\n    SUMMEPROJEKT4WAZ = 0\r\n    SUMMEZULAGEWAZ = 0\r\n    custom_summe_wochenarbeitszeit = 0\r\n\r\n    today_date = frappe.utils.getdate()  # Wandelt das heutige Datum in ein Date-Objekt um\r\n    \r\n    # Erster Teil: Grundvertrag prüfen\r\n    if (doc.custom_wochenstunden_grundvertrag \r\n        and (not doc.custom_start_des_grundvertrags or today_date >= frappe.utils.getdate(doc.custom_start_des_grundvertrags))\r\n        and (not doc.custom_ende_des_arbeitsverhältnis or today_date <= frappe.utils.getdate(doc.custom_ende_des_arbeitsverhältnis))):\r\n        SUMMEGRUNDVERTRAGWAZ = doc.custom_wochenstunden_grundvertrag\r\n\r\n    # Zweiter Teil: Projektverträge prüfen\r\n    if doc.custom_wochenstunden_projekt_1 and (not doc.custom_start_der_1_arbeit or today_date >= frappe.utils.getdate(doc.custom_start_der_1_arbeit)) \\\r\n        and (not doc.custom_befristung_des_1_vertrags or today_date <= frappe.utils.getdate(doc.custom_befristung_des_1_vertrags)):\r\n        SUMMEPROJEKT1WAZ = doc.custom_wochenstunden_projekt_1\r\n\r\n    if doc.custom_wochenstunden_projekt_2 and (not doc.custom_start_der_2_arbeit or today_date >= frappe.utils.getdate(doc.custom_start_der_2_arbeit)) \\\r\n        and (not doc.custom_befristung_des_2_vertrags or today_date <= frappe.utils.getdate(doc.custom_befristung_des_2_vertrags)):\r\n        SUMMEPROJEKT2WAZ = doc.custom_wochenstunden_projekt_2\r\n\r\n    if doc.custom_wochenstunden_projekt_3 and (not doc.custom_start_der_3_arbeit or today_date >= frappe.utils.getdate(doc.custom_start_der_3_arbeit)) \\\r\n        and (not doc.custom_befristung_des_3_vertrags or today_date <= frappe.utils.getdate(doc.custom_befristung_des_3_vertrags)):\r\n        SUMMEPROJEKT3WAZ = doc.custom_wochenstunden_projekt_3\r\n\r\n    if doc.custom_wochenstunden_projekt_4 and (not doc.custom_start_der_4_arbeit or today_date >= frappe.utils.getdate(doc.custom_start_der_4_arbeit)) \\\r\n        and (not doc.custom_befristung_des_4_vertrags or today_date <= frappe.utils.getdate(doc.custom_befristung_des_4_vertrags)):\r\n        SUMMEPROJEKT4WAZ = doc.custom_wochenstunden_projekt_4\r\n\r\n    # Dritter Teil: Arbeitszeiten zusammenrechnen\r\n    projekt_sum = SUMMEPROJEKT1WAZ + SUMMEPROJEKT2WAZ + SUMMEPROJEKT3WAZ + SUMMEPROJEKT4WAZ\r\n\r\n    if projekt_sum > 0 and (not any([\r\n        doc.custom_wochenstunden_zum_grundvertrag_hinzurechnen, \r\n        doc.custom_wochenstunden_zum_grundvertrag_hinzurechnen_1, \r\n        doc.custom_wochenstunden_zum_grundvertrag_hinzurechnen_2, \r\n        doc.custom_wochenstunden_zum_grundvertrag_hinzurechnen_4\r\n    ])):\r\n        custom_summe_wochenarbeitszeit = projekt_sum\r\n    else:\r\n        custom_summe_wochenarbeitszeit = projekt_sum + SUMMEGRUNDVERTRAGWAZ\r\n\r\n#    if SUMMEGRUNDVERTRAGWAZ > 0:\r\n#        custom_summe_wochenarbeitszeit = SUMMEGRUNDVERTRAGWAZ\r\n#        custom_summe_wochenarbeitszeit = custom_summe_wochenarbeitszeit + SUMMEPROJEKT1WAZ if doc.custom_wochenstunden_zum_grundvertrag_hinzurechnen else custom_summe_wochenarbeitszeit\r\n#        custom_summe_wochenarbeitszeit = custom_summe_wochenarbeitszeit + SUMMEPROJEKT2WAZ if doc.custom_wochenstunden_zum_grundvertrag_hinzurechnen_1 else custom_summe_wochenarbeitszeit\r\n#        custom_summe_wochenarbeitszeit = custom_summe_wochenarbeitszeit + SUMMEPROJEKT3WAZ if doc.custom_wochenstunden_zum_grundvertrag_hinzurechnen_2 else custom_summe_wochenarbeitszeit\r\n#        custom_summe_wochenarbeitszeit = custom_summe_wochenarbeitszeit + SUMMEPROJEKT4WAZ if doc.custom_wochenstunden_zum_grundvertrag_hinzurechnen_4 else custom_summe_wochenarbeitszeit\r\n\r\n    # Vierter Teil: Zulagen summieren und hinzufügen\r\n    if ((doc.custom_projekt_zulage_1 and doc.custom_wochenstunden_zulage_1)\r\n        and (not doc.custom_anfangsdatum_zulage_1 or today_date >= frappe.utils.getdate(doc.custom_anfangsdatum_zulage_1))\r\n        and (not doc.custom_enddatum_zulage_1 or today_date <= frappe.utils.getdate(doc.custom_enddatum_zulage_1))):\r\n        SUMMEZULAGEWAZ = SUMMEZULAGEWAZ + doc.custom_wochenstunden_zulage_1\r\n\r\n    if ((doc.custom_projekt_zulage_2 and doc.custom_wochenstunden_zulage_2)\r\n        and (not doc.custom_anfangsdatum_zulage_2 or today_date >= frappe.utils.getdate(doc.custom_anfangsdatum_zulage_2))\r\n        and (not doc.custom_enddatum_zulage_2 or today_date <= frappe.utils.getdate(doc.custom_enddatum_zulage_2))):\r\n        SUMMEZULAGEWAZ = SUMMEZULAGEWAZ + doc.custom_wochenstunden_zulage_2\r\n\r\n    if custom_summe_wochenarbeitszeit > 0:\r\n        custom_summe_wochenarbeitszeit = custom_summe_wochenarbeitszeit + SUMMEZULAGEWAZ\r\n\r\n    # Ergebnis speichern\r\n    doc.custom_summe_wochenarbeitszeit = custom_summe_wochenarbeitszeit\r\n    doc.custom_summe_wochenarbeitszeit_2 = custom_summe_wochenarbeitszeit\r\n\r\n# Funktion wird bei Speichern aufgerufen\r\ncalculate_working_hours(doc)\r\n\r\n",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "Daily",
  "modified": "2025-05-22 13:39:00.195758",
  "module": "SUT App UEAG",
  "name": "Mitarbeiter - Wochenarbeitsstunden berechnen",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Employee",
  "script": "# Dieses Script wird täglich um 00:01 Uhr für alle Employee-Datensätze ausgeführt.\r\n# edit von Lars Maeurer bearbeitet und sollte funktionieren. Tests stehen teilweise noch aus.\r\n\r\ndef calculate_working_hours():\r\n    employees = frappe.get_all(\"Employee\")\r\n    today_date = frappe.utils.getdate()  # Wandelt das heutige Datum in ein Date-Objekt um\r\n    \r\n    for emp in employees:\r\n        employee = frappe.get_doc(\"Employee\", emp.name)\r\n        \r\n        # Variableninitialisierung\r\n        SUMMEGRUNDVERTRAGWAZ = 0\r\n        SUMMEPROJEKT1WAZ = 0\r\n        SUMMEPROJEKT2WAZ = 0\r\n        SUMMEPROJEKT3WAZ = 0\r\n        SUMMEPROJEKT4WAZ = 0\r\n        SUMMEZULAGEWAZ = 0\r\n        custom_summe_wochenarbeitszeit = 0\r\n        \r\n        # Erster Teil: Grundvertrag prüfen\r\n        if (employee.custom_wochenstunden_grundvertrag \r\n            and (not employee.custom_start_des_grundvertrags or today_date >= frappe.utils.getdate(employee.custom_start_des_grundvertrags))\r\n            and (not employee.custom_ende_des_arbeitsverhältnis or today_date <= frappe.utils.getdate(employee.custom_ende_des_arbeitsverhältnis))):\r\n            SUMMEGRUNDVERTRAGWAZ = employee.custom_wochenstunden_grundvertrag\r\n        \r\n        # Zweiter Teil: Projektverträge prüfen\r\n        if employee.custom_wochenstunden_projekt_1 and (not employee.custom_start_der_1_arbeit or today_date >= frappe.utils.getdate(employee.custom_start_der_1_arbeit)) \\\r\n            and (not employee.custom_befristung_des_1_vertrags or today_date <= frappe.utils.getdate(employee.custom_befristung_des_1_vertrags)):\r\n            SUMMEPROJEKT1WAZ = employee.custom_wochenstunden_projekt_1\r\n\r\n        if employee.custom_wochenstunden_projekt_2 and (not employee.custom_start_der_2_arbeit or today_date >= frappe.utils.getdate(employee.custom_start_der_2_arbeit)) \\\r\n            and (not employee.custom_befristung_des_2_vertrags or today_date <= frappe.utils.getdate(employee.custom_befristung_des_2_vertrags)):\r\n            SUMMEPROJEKT2WAZ = employee.custom_wochenstunden_projekt_2\r\n\r\n        if employee.custom_wochenstunden_projekt_3 and (not employee.custom_start_der_3_arbeit or today_date >= frappe.utils.getdate(employee.custom_start_der_3_arbeit)) \\\r\n            and (not employee.custom_befristung_des_3_vertrags or today_date <= frappe.utils.getdate(employee.custom_befristung_des_3_vertrags)):\r\n            SUMMEPROJEKT3WAZ = employee.custom_wochenstunden_projekt_3\r\n\r\n        if employee.custom_wochenstunden_projekt_4 and (not employee.custom_start_der_4_arbeit or today_date >= frappe.utils.getdate(employee.custom_start_der_4_arbeit)) \\\r\n            and (not employee.custom_befristung_des_4_vertrags or today_date <= frappe.utils.getdate(employee.custom_befristung_des_4_vertrags)):\r\n            SUMMEPROJEKT4WAZ = employee.custom_wochenstunden_projekt_4\r\n\r\n        # Dritter Teil: Arbeitszeiten zusammenrechnen\r\n        projekt_sum = SUMMEPROJEKT1WAZ + SUMMEPROJEKT2WAZ + SUMMEPROJEKT3WAZ + SUMMEPROJEKT4WAZ\r\n\r\n        if projekt_sum > 0 and not any([\r\n            employee.custom_wochenstunden_zum_grundvertrag_hinzurechnen, \r\n            employee.custom_wochenstunden_zum_grundvertrag_hinzurechnen_1, \r\n            employee.custom_wochenstunden_zum_grundvertrag_hinzurechnen_2, \r\n            employee.custom_wochenstunden_zum_grundvertrag_hinzurechnen_4\r\n        ]):\r\n            custom_summe_wochenarbeitszeit = projekt_sum\r\n        else:\r\n            custom_summe_wochenarbeitszeit = projekt_sum + SUMMEGRUNDVERTRAGWAZ\r\n\r\n#        elif SUMMEGRUNDVERTRAGWAZ > 0:\r\n#            custom_summe_wochenarbeitszeit = SUMMEGRUNDVERTRAGWAZ\r\n#            custom_summe_wochenarbeitszeit = custom_summe_wochenarbeitszeit + SUMMEPROJEKT1WAZ if employee.custom_wochenstunden_zum_grundvertrag_hinzurechnen else custom_summe_wochenarbeitszeit\r\n#            custom_summe_wochenarbeitszeit = custom_summe_wochenarbeitszeit + SUMMEPROJEKT2WAZ if employee.custom_wochenstunden_zum_grundvertrag_hinzurechnen_1 else custom_summe_wochenarbeitszeit\r\n#            custom_summe_wochenarbeitszeit = custom_summe_wochenarbeitszeit + SUMMEPROJEKT3WAZ if employee.custom_wochenstunden_zum_grundvertrag_hinzurechnen_2 else custom_summe_wochenarbeitszeit\r\n#            custom_summe_wochenarbeitszeit = custom_summe_wochenarbeitszeit + SUMMEPROJEKT4WAZ if employee.custom_wochenstunden_zum_grundvertrag_hinzurechnen_4 else custom_summe_wochenarbeitszeit\r\n\r\n        # Vierter Teil: Zulagen summieren und hinzufügen\r\n    if ((employee.custom_projekt_zulage_1 and employee.custom_wochenstunden_zulage_1)\r\n        and (not employee.custom_anfangsdatum_zulage_1 or today_date >= frappe.utils.getdate(employee.custom_anfangsdatum_zulage_1))\r\n        and (not employee.custom_enddatum_zulage_1 or today_date <= frappe.utils.getdate(employee.custom_enddatum_zulage_1))):\r\n        SUMMEZULAGEWAZ = SUMMEZULAGEWAZ + employee.custom_wochenstunden_zulage_1\r\n\r\n    if ((employee.custom_projekt_zulage_2 and employee.custom_wochenstunden_zulage_2)\r\n        and (not employee.custom_anfangsdatum_zulage_2 or today_date >= frappe.utils.getdate(employee.custom_anfangsdatum_zulage_2))\r\n        and (not employee.custom_enddatum_zulage_2 or today_date <= frappe.utils.getdate(employee.custom_enddatum_zulage_2))):\r\n        SUMMEZULAGEWAZ = SUMMEZULAGEWAZ + employee.custom_wochenstunden_zulage_2\r\n\r\n        if custom_summe_wochenarbeitszeit > 0:\r\n            custom_summe_wochenarbeitszeit = custom_summe_wochenarbeitszeit + SUMMEZULAGEWAZ\r\n\r\n        # Fünfter Teil: custom_summe_wochenarbeitszeit anzeigen\r\n        employee.custom_summe_wochenarbeitszeit = custom_summe_wochenarbeitszeit\r\n        employee.custom_summe_wochenarbeitszeit_2 = custom_summe_wochenarbeitszeit\r\n        \r\n        # Speichern der Ergebnisse\r\n        employee.save(ignore_permissions=True)\r\n\r\n# Aufruf der Funktion für tägliche Berechnung\r\ncalculate_working_hours()\r\n",
  "script_type": "Scheduler Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": "",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "Daily",
  "modified": "2025-05-22 13:39:00.106572",
  "module": "SUT App UEAG",
  "name": "Mitarbeiter - Summe Lohn berechnen V2",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": null,
  "script": "# Dieses Script wird täglich um 00:01 Uhr für alle Employee-Datensätze ausgeführt.\r\n# edit von Lars Maeurer - Tests stehen noch aus\r\n\r\ndef calculate_salary():\r\n    employees = frappe.get_all(\"Employee\")\r\n    today_date = frappe.utils.getdate()  # Wandelt das heutige Datum in ein Date-Objekt um\r\n    \r\n    for emp in employees:\r\n        employee = frappe.get_doc(\"Employee\", emp.name)\r\n        \r\n        # Variableninitialisierung\r\n        SUMMEGRUNDVERTRAG = 0\r\n        SUMMEPROJEKT1 = 0\r\n        SUMMEPROJEKT2 = 0\r\n        SUMMEPROJEKT3 = 0\r\n        SUMMEPROJEKT4 = 0\r\n        SUMMEZULAGE = 0\r\n        custom_summe_gehalt = 0\r\n        \r\n        # Erster Teil: Grundvertrag prüfen\r\n        if (employee.custom_gehalt_des_grundvertrags \r\n            and (not employee.custom_start_des_grundvertrags or today_date >= frappe.utils.getdate(employee.custom_start_des_grundvertrags))\r\n            and (not employee.custom_ende_des_arbeitsverhältnis or today_date <= frappe.utils.getdate(employee.custom_ende_des_arbeitsverhältnis))):\r\n            SUMMEGRUNDVERTRAG = employee.custom_gehalt_des_grundvertrags\r\n        \r\n        # Zweiter Teil: Projektverträge prüfen\r\n        if employee.custom_gehalt_projekt_1 and (employee.custom_gehalt_projekt_1 > 0) and (not employee.custom_start_der_1_arbeit or today_date >= frappe.utils.getdate(employee.custom_start_der_1_arbeit)) \\\r\n            and (not employee.custom_befristung_des_1_vertrags or today_date <= frappe.utils.getdate(employee.custom_befristung_des_1_vertrags)):\r\n            SUMMEPROJEKT1 = employee.custom_gehalt_projekt_1\r\n\r\n        if employee.custom_gehalt_projekt_2 and (employee.custom_gehalt_projekt_2 > 0) and (not employee.custom_start_der_2_arbeit or today_date >= frappe.utils.getdate(employee.custom_start_der_2_arbeit)) \\\r\n            and (not employee.custom_befristung_des_2_vertrags or today_date <= frappe.utils.getdate(employee.custom_befristung_des_2_vertrags)):\r\n            SUMMEPROJEKT2 = employee.custom_gehalt_projekt_2\r\n\r\n        if employee.custom_gehalt_projekt_3 and (employee.custom_gehalt_projekt_3 > 0) and (not employee.custom_start_der_3_arbeit or today_date >= frappe.utils.getdate(employee.custom_start_der_3_arbeit)) \\\r\n            and (not employee.custom_befristung_des_3_vertrags or today_date <= frappe.utils.getdate(employee.custom_befristung_des_3_vertrags)):\r\n            SUMMEPROJEKT3 = employee.custom_gehalt_projekt_3\r\n\r\n        if employee.custom_gehalt_projekt_4 and (employee.custom_gehalt_projekt_4 > 0) and (not employee.custom_start_der_4_arbeit or today_date >= frappe.utils.getdate(employee.custom_start_der_4_arbeit)) \\\r\n            and (not employee.custom_befristung_des_4_vertrags or today_date <= frappe.utils.getdate(employee.custom_befristung_des_4_vertrags)):\r\n            SUMMEPROJEKT4 = employee.custom_gehalt_projekt_4\r\n\r\n        # Dritter Teil: Lohnteile zusammenrechnen\r\n        projekt_sum = SUMMEPROJEKT1 + SUMMEPROJEKT2 + SUMMEPROJEKT3 + SUMMEPROJEKT4\r\n        if projekt_sum == 0: custom_summe_gehalt = SUMMEGRUNDVERTRAG\r\n\r\n        if projekt_sum > 0 and not any([\r\n            employee.custom_ist_zusätzliche_vergütung_zum_grundgehalt, \r\n            employee.custom_ist_zusätzliche_vergütung_zum_grundgehalt_1, \r\n            employee.custom_ist_zusätzliche_vergütung_zum_grundgehalt_2, \r\n            employee.custom_ist_zusätzliche_vergütung_zum_grundgehalt_3\r\n        ]):\r\n            custom_summe_gehalt = projekt_sum\r\n        else:\r\n            custom_summe_gehalt = projekt_sum + SUMMEGRUNDVERTRAG\r\n\r\n#        elif SUMMEGRUNDVERTRAG > 0:\r\n#            custom_summe_gehalt = SUMMEGRUNDVERTRAG\r\n#            custom_summe_gehalt = custom_summe_gehalt + SUMMEPROJEKT1 if employee.custom_ist_zusätzliche_vergütung_zum_grundgehalt else custom_summe_gehalt\r\n#            custom_summe_gehalt = custom_summe_gehalt + SUMMEPROJEKT2 if employee.custom_ist_zusätzliche_vergütung_zum_grundgehalt_1 else custom_summe_gehalt\r\n#            custom_summe_gehalt = custom_summe_gehalt + SUMMEPROJEKT3 if employee.custom_ist_zusätzliche_vergütung_zum_grundgehalt_2 else custom_summe_gehalt\r\n#            custom_summe_gehalt = custom_summe_gehalt + SUMMEPROJEKT4 if employee.custom_ist_zusätzliche_vergütung_zum_grundgehalt_3 else custom_summe_gehalt\r\n\r\n        # Vierter Teil: Zulagen summieren und hinzufügen\r\n        if ((employee.custom_projekt_zulage_1 and employee.custom_zulage_zulage_1)\r\n            and (not employee.custom_anfangsdatum_zulage_1 or today_date >= frappe.utils.getdate(employee.custom_anfangsdatum_zulage_1))\r\n            and (not employee.custom_enddatum_zulage_1 or today_date <= frappe.utils.getdate(employee.custom_enddatum_zulage_1))):\r\n            SUMMEZULAGE = SUMMEZULAGE + employee.custom_zulage_zulage_1\r\n\r\n        if ((employee.custom_projekt_zulage_2 and employee.custom_zulage_zulage_2)\r\n            and (not employee.custom_anfangsdatum_zulage_2 or today_date >= frappe.utils.getdate(employee.custom_anfangsdatum_zulage_2))\r\n            and (not employee.custom_enddatum_zulage_2 or today_date <= frappe.utils.getdate(employee.custom_enddatum_zulage_2))):\r\n            SUMMEZULAGE = SUMMEZULAGE + employee.custom_zulage_zulage_2\r\n\r\n \r\n        if custom_summe_gehalt > 0:\r\n            custom_summe_gehalt = custom_summe_gehalt + SUMMEZULAGE\r\n\r\n        # Fünfter Teil: custom_summe_gehalt anzeigen\r\n        employee.custom_summe_gehalt = custom_summe_gehalt\r\n        employee.custom_summe_gehalt_2 = custom_summe_gehalt\r\n        \r\n        # Speichern der Ergebnisse - ist das nötig? - vermutlich schon, weil wir nicht auf einem bestimmten doc agieren mit unserem Script (?!!!)\r\n        employee.save(ignore_permissions=True)\r\n\r\n# Aufruf der Funktion für tägliche Berechnung\r\ncalculate_salary()",
  "script_type": "Scheduler Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Save",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-05-22 13:39:00.160819",
  "module": "SUT App UEAG",
  "name": "Mitarbeiter - Gesamtlohn des gerade bearbeiteten MA berechnen",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Employee",
  "script": "# Dieses Script wird beim Speichern eines Employee-Dokuments ausgeführt.\r\n# Dieses Script wurde von Lars Maeurer bearbeitet und sollte funktionieren. Tests stehen teilweise noch aus.\r\n\r\ndef calculate_salary(doc):\r\n    # Variableninitialisierung\r\n    SUMMEGRUNDVERTRAG = 0\r\n    SUMMEPROJEKT1 = 0\r\n    SUMMEPROJEKT2 = 0\r\n    SUMMEPROJEKT3 = 0\r\n    SUMMEPROJEKT4 = 0\r\n    SUMMEZULAGE = 0\r\n    custom_summe_gehalt = 0\r\n\r\n    today_date = frappe.utils.getdate()  # Wandelt das heutige Datum in ein Date-Objekt um\r\n\r\n    # Erster Teil: Grundvertrag prüfen\r\n    if (doc.custom_gehalt_des_grundvertrags\r\n        and (not doc.custom_start_des_grundvertrags or today_date >= frappe.utils.getdate(doc.custom_start_des_grundvertrags))\r\n        and (not doc.custom_ende_des_arbeitsverhältnis or today_date <= frappe.utils.getdate(doc.custom_ende_des_arbeitsverhältnis))):\r\n        SUMMEGRUNDVERTRAG = doc.custom_gehalt_des_grundvertrags\r\n\r\n    # Zweiter Teil: Projektverträge prüfen\r\n    if doc.custom_gehalt_projekt_1 and doc.custom_gehalt_projekt_1 > 0 and (not doc.custom_start_der_1_arbeit or today_date >= frappe.utils.getdate(doc.custom_start_der_1_arbeit)) \\\r\n        and (not doc.custom_befristung_des_1_vertrags or today_date <= frappe.utils.getdate(doc.custom_befristung_des_1_vertrags)):\r\n        SUMMEPROJEKT1 = doc.custom_gehalt_projekt_1\r\n\r\n    if doc.custom_gehalt_projekt_2 and doc.custom_gehalt_projekt_2 > 0 and (not doc.custom_start_der_2_arbeit or today_date >= frappe.utils.getdate(doc.custom_start_der_2_arbeit)) \\\r\n        and (not doc.custom_befristung_des_2_vertrags or today_date <= frappe.utils.getdate(doc.custom_befristung_des_2_vertrags)):\r\n        SUMMEPROJEKT2 = doc.custom_gehalt_projekt_2\r\n\r\n    if doc.custom_gehalt_projekt_3 and doc.custom_gehalt_projekt_3 > 0 and (not doc.custom_start_der_3_arbeit or today_date >= frappe.utils.getdate(doc.custom_start_der_3_arbeit)) \\\r\n        and (not doc.custom_befristung_des_3_vertrags or today_date <= frappe.utils.getdate(doc.custom_befristung_des_3_vertrags)):\r\n        SUMMEPROJEKT3 = doc.custom_gehalt_projekt_3\r\n\r\n    if doc.custom_gehalt_projekt_4 and doc.custom_gehalt_projekt_4 > 0 and (not doc.custom_start_der_4_arbeit or today_date >= frappe.utils.getdate(doc.custom_start_der_4_arbeit)) \\\r\n        and (not doc.custom_befristung_des_4_vertrags or today_date <= frappe.utils.getdate(doc.custom_befristung_des_4_vertrags)):\r\n        SUMMEPROJEKT4 = doc.custom_gehalt_projekt_4\r\n\r\n    # Dritter Teil: Lohnteile zusammenrechnen\r\n    projekt_sum = SUMMEPROJEKT1 + SUMMEPROJEKT2 + SUMMEPROJEKT3 + SUMMEPROJEKT4\r\n    if projekt_sum == 0: custom_summe_gehalt = SUMMEGRUNDVERTRAG\r\n\r\n    \r\n    if projekt_sum > 0 and (not any([\r\n        doc.custom_ist_zusätzliche_vergütung_zum_grundgehalt, \r\n        doc.custom_ist_zusätzliche_vergütung_zum_grundgehalt_1, \r\n        doc.custom_ist_zusätzliche_vergütung_zum_grundgehalt_2, \r\n        doc.custom_ist_zusätzliche_vergütung_zum_grundgehalt_3\r\n    ])):\r\n        custom_summe_gehalt = projekt_sum\r\n    else:\r\n        custom_summe_gehalt = projekt_sum + SUMMEGRUNDVERTRAG\r\n\r\n#    elif SUMMEGRUNDVERTRAG > 0:\r\n#        custom_summe_gehalt = SUMMEGRUNDVERTRAG\r\n#        custom_summe_gehalt = custom_summe_gehalt + SUMMEPROJEKT1 if doc.custom_ist_zusätzliche_vergütung_zum_grundgehalt else custom_summe_gehalt\r\n#        custom_summe_gehalt = custom_summe_gehalt + SUMMEPROJEKT2 if doc.custom_ist_zusätzliche_vergütung_zum_grundgehalt_1 else custom_summe_gehalt\r\n#        custom_summe_gehalt = custom_summe_gehalt + SUMMEPROJEKT3 if doc.custom_ist_zusätzliche_vergütung_zum_grundgehalt_2 else custom_summe_gehalt\r\n#        custom_summe_gehalt = custom_summe_gehalt + SUMMEPROJEKT4 if doc.custom_ist_zusätzliche_vergütung_zum_grundgehalt_3 else custom_summe_gehalt\r\n\r\n    # Vierter Teil: Zulagen summieren und hinzufügen\r\n    if ((doc.custom_projekt_zulage_1 and doc.custom_zulage_zulage_1)\r\n        and (not doc.custom_anfangsdatum_zulage_1 or today_date >= frappe.utils.getdate(doc.custom_anfangsdatum_zulage_1))\r\n        and (not doc.custom_enddatum_zulage_1 or today_date <= frappe.utils.getdate(doc.custom_enddatum_zulage_1))):\r\n        SUMMEZULAGE = SUMMEZULAGE + doc.custom_zulage_zulage_1\r\n\r\n    if ((doc.custom_projekt_zulage_2 and doc.custom_zulage_zulage_2)\r\n        and (not doc.custom_anfangsdatum_zulage_2 or today_date >= frappe.utils.getdate(doc.custom_anfangsdatum_zulage_2))\r\n        and (not doc.custom_enddatum_zulage_2 or today_date <= frappe.utils.getdate(doc.custom_enddatum_zulage_2))):\r\n        SUMMEZULAGE = SUMMEZULAGE + doc.custom_zulage_zulage_2\r\n\r\n    if custom_summe_gehalt > 0:\r\n        custom_summe_gehalt = custom_summe_gehalt + SUMMEZULAGE\r\n\r\n    # Ergebnis speichern\r\n    doc.custom_summe_gehalt = custom_summe_gehalt\r\n    doc.custom_summe_gehalt_2 = custom_summe_gehalt\r\n\r\n# Funktion aufrufen\r\ncalculate_salary(doc)",
  "script_type": "DocType Event"
 }
]